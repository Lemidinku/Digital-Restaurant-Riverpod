// Mocks generated by Mockito 5.4.4 from annotations
// in restaurant/test/unit_test/cart_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:restaurant/domain/meal.dart' as _i2;
import 'package:restaurant/Infrastructure/repositories/meal_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMeal_0 extends _i1.SmartFake implements _i2.Meal {
  _FakeMeal_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MealRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMealRepository extends _i1.Mock implements _i3.MealRepository {
  MockMealRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i5.Future<List<_i2.Meal>> fetchMeals() => (super.noSuchMethod(
        Invocation.method(
          #fetchMeals,
          [],
        ),
        returnValue: _i5.Future<List<_i2.Meal>>.value(<_i2.Meal>[]),
      ) as _i5.Future<List<_i2.Meal>>);

  @override
  _i5.Future<_i2.Meal> addMeal(_i2.Meal? meal) => (super.noSuchMethod(
        Invocation.method(
          #addMeal,
          [meal],
        ),
        returnValue: _i5.Future<_i2.Meal>.value(_FakeMeal_0(
          this,
          Invocation.method(
            #addMeal,
            [meal],
          ),
        )),
      ) as _i5.Future<_i2.Meal>);

  @override
  _i5.Future<_i2.Meal> updateMeal(
    String? id,
    Map<String, dynamic>? updates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMeal,
          [
            id,
            updates,
          ],
        ),
        returnValue: _i5.Future<_i2.Meal>.value(_FakeMeal_0(
          this,
          Invocation.method(
            #updateMeal,
            [
              id,
              updates,
            ],
          ),
        )),
      ) as _i5.Future<_i2.Meal>);

  @override
  _i5.Future<void> deleteMeal(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMeal,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
